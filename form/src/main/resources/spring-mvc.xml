<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

    <!-- 自动扫描且只扫描@Controller -->
    <context:component-scan base-package="com.peterchen.form.web" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>


    <!-- 容器默认的DefaultServletHandler处理 所有静态内容与无RequestMapping处理的URL-->
    <mvc:default-servlet-handler/>

    <!-- 定义无需Controller的url<->view直接映射 -->
    <mvc:view-controller path="/" view-username="index"/>

    <!--spring-mvc annotation core -->
    <mvc:annotation-driven content-negotiation-manager="contentNegotiationManager" validator="validator">
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8"/>
            </bean>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property username="prettyPrint" value="true"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--spring-mvc Interceptor

    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.lianxi.queen.web.common.CommonHandlerInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>

-->
    <!--jsr303 validator hibernate impl-->
    <bean id="validator"
          class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>


    <!-- REST中根据URL后缀自动判定Content-Type及相应的View -->
    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property username="ignoreAcceptHeader" value="true"/>
        <property username="defaultContentType" value="application/json"/>
        <property username="mediaTypes">
            <value>
                json=application/json
                xml=application/xml
            </value>
        </property>
    </bean>

    <!-- 定义JSP文件的位置 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property username="prefix" value="/views/"/>
        <property username="suffix" value=".jsp"/>
    </bean>


    <!-- 将Controller抛出的异常转到特定View, 保持SiteMesh的装饰效果
     -->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property username="exceptionMappings">
            <props>
                <prop key="java.lang.Throwable">error/500</prop>
            </props>
        </property>
    </bean>


</beans>
